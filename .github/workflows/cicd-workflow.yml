name: CICD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t devhub3/devhub-frontend .
      - name: Publish image to docker hub
        run: docker push devhub3/devhub-frontend:latest
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: sudo docker pull devhub3/devhub-frontend:latest
      - name: Delete old container
        run: sudo docker rm -f devhub-frontend-container
      - name: Run docker container
        run: sudo docker run -d -p 3000:3000 --name devhub-frontend-container devhub3/devhub-frontend
      - name: Remove directory
        run: sudo rm -r /var/www/54.165.158.129
      - name: Create directory
        run: sudo mkdir /var/www/54.165.158.129
      - name: Permission chmod
        run: sudo chmod 777 -R /var/www/54.165.158.129
      - name: Clone project
        run: git clone https://github.com/DevHubCode/devhub-frontend.git /var/www/54.165.158.129/
      - name: Install node
        run: |
          if ! command -v node &> /dev/null; then
            echo "Node.js is not installed."
            # Add commands here to install Node.js
            # For example, if you're using Ubuntu:
            # sudo apt-get update
            # sudo apt-get install nodejs
          else
            echo "Node.js is installed."
          fi
        working-directory: /var/www/54.165.158.129
      - name: Build Project
        run: npm run build
        working-directory: /var/www/54.165.158.129

    
          